-- Create otp table
CREATE TABLE `otp` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `otp_number` int(6) NOT NULL,
  `email` varchar(100) NOT NULL,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `email` (`email`),
  CONSTRAINT `otp_ibfk_1` FOREIGN KEY (`email`) REFERENCES `users` (`email`) ON DELETE CASCADE
);

-- Create procedure to generate and insert OTP
DELIMITER $$
CREATE PROCEDURE `generate_and_insert_otp` (IN `user_email` VARCHAR(100))
BEGIN
    DECLARE otp INT;
    SET otp = FLOOR(100000 + RAND() * 900000);
    INSERT INTO otp (otp_number, email) VALUES (otp, user_email);
END$$
DELIMITER ;



CREATE TABLE prenatal (
    prenatal_id INT(11) AUTO_INCREMENT PRIMARY KEY,
    resident_id INT(11) NOT NULL,
    checkup_date DATE NOT NULL,
    gestational_age INT(11),
    blood_pressure VARCHAR(50),
    weight DECIMAL(10, 2),
    fetal_heartbeat VARCHAR(50),
    calcium_supplementation BOOLEAN DEFAULT 0,
    iodine_capsules BOOLEAN DEFAULT 0,
    deworming_tablets BOOLEAN DEFAULT 0,
    syphilis_screened BOOLEAN DEFAULT 0,
    syphilis_positive BOOLEAN DEFAULT 0,
    hepB_screened BOOLEAN DEFAULT 0,
    hepB_positive BOOLEAN DEFAULT 0,
    hiv_screened BOOLEAN DEFAULT 0,
    cbc_tested BOOLEAN DEFAULT 0,
    cbc_anemia BOOLEAN DEFAULT 0,
    gestational_diabetes_screened BOOLEAN DEFAULT 0,
    gestational_diabetes_positive BOOLEAN DEFAULT 0,
    remarks TEXT,
    FOREIGN KEY (resident_id) REFERENCES residents(id)
);


CREATE TABLE hypertension (
    hypertension_id INT(11) AUTO_INCREMENT PRIMARY KEY,
    resident_id INT(11) NOT NULL,
    checkup_date DATE NOT NULL,
    medicine_type VARCHAR(255),
    blood_pressure VARCHAR(50),
    remarks_type TEXT,
    FOREIGN KEY (resident_id) REFERENCES residents(id)
);




ALTER TABLE `users` ADD INDEX (`email`);

CREATE TABLE `otp` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `otp_number` int(11) NOT NULL,
  `email` varchar(100) NOT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`id`),
  KEY `email` (`email`),
  CONSTRAINT `otp_ibfk_1` FOREIGN KEY (`email`) REFERENCES `users` (`email`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

//////////////////Edit on the user table
ALTER TABLE users
DROP COLUMN unique_id,
ADD COLUMN unique_id INT(255) NOT NULL;

/////////////////Add this table
CREATE TABLE `messages` (
  `msg_id` int(11) NOT NULL,
  `incoming_msg_id` int(255) NOT NULL,
  `outgoing_msg_id` int(255) NOT NULL,
  `msg` varchar(1000) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

ALTER TABLE `messages`
  ADD PRIMARY KEY (`msg_id`);

  ALTER TABLE `messages`
  MODIFY `msg_id` int(11) NOT NULL AUTO_INCREMENT;


  ALTER TABLE `animal_bite_records`
ADD COLUMN `bitten_place` VARCHAR(255) DEFAULT NULL AFTER `bite_date`;

ALTER TABLE messages ADD status VARCHAR(10) DEFAULT 'unread';

-- Add status column to track the admin's status (e.g., online, offline)
ALTER TABLE administrator
ADD COLUMN status VARCHAR(20) DEFAULT 'offline' AFTER a_status;

-- Modify pfp column to store the path of the profile image instead of a blob
ALTER TABLE administrator
CHANGE COLUMN pfp pfp VARCHAR(255);

ALTER TABLE animal_bite_records
ADD COLUMN bitten_location VARCHAR(255) DEFAULT NULL AFTER bite_date;

//to add ID number 
ALTER TABLE residents ADD COLUMN id_card_no VARCHAR(50) AFTER latitude;
ALTER TABLE residents MODIFY id_card_no VARCHAR(50) UNIQUE;
ALTER TABLE residents MODIFY profile VARCHAR(255)

ALTER TABLE `contact_us`
ADD `longitude` VARCHAR(255) DEFAULT NULL,
ADD `latitude` VARCHAR(255) DEFAULT NULL;


CREATE TABLE purok_boundaries (
    id INT(11) AUTO_INCREMENT PRIMARY KEY,
    barangay_name VARCHAR(255) NOT NULL,
    purok_name VARCHAR(255) NOT NULL,
    boundary_coordinates TEXT NOT NULL,
    color VARCHAR(7) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);


CREATE TABLE organization (
    id INT AUTO_INCREMENT PRIMARY KEY,          -- Unique ID for each member
    name VARCHAR(255) NOT NULL,                 -- Name of the individual
    position VARCHAR(255) NOT NULL,             -- Position or role in the organization
    photo VARCHAR(255) NOT NULL,                -- Profile photo (optional)
    contact_info VARCHAR(255) DEFAULT NULL,     -- Contact information (optional)
    description TEXT DEFAULT NULL,              -- Additional details about the individual
    parent_id INT DEFAULT NULL,                 -- References the ID of the parent (e.g., chairman, committee head)
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Timestamp for creation
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, -- Timestamp for last update
    FOREIGN KEY (parent_id) REFERENCES organization(id) -- Enforces hierarchical relationship
);
